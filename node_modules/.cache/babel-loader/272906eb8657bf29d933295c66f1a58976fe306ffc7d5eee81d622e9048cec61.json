{"ast":null,"code":"var _jsxFileName = \"C:\\\\React js\\\\Pr_2\\\\src\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport './home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Record = () => {\n  _s();\n  const [input, setInput] = useState([{\n    id: '',\n    name: '',\n    phone: ''\n  }]);\n  const addData = () => {\n    let newRow = {\n      id: Math.floor(Math.random() * 10000),\n      name: '',\n      phone: ''\n    };\n    let add = [...input, newRow];\n    setInput(add);\n  };\n  const inputhandle = (e, i) => {\n    let data = [...input];\n    data[i][e.target.name] = e.target.value;\n    setInput(data);\n  };\n  const remove = id => {\n    let allData = [...input];\n    let del = allData.filter(val => {\n      return val.id != id;\n    });\n    setInput(del);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dynamic Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: input.map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              value: item.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 37\n            }, this), \"Name : \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: item.name,\n              onChange: e => inputhandle(e, i)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 44\n            }, this), \"Phone : \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"phone\",\n              value: item.phone,\n              onChange: e => inputhandle(e, i)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 45\n            }, this), i == 0 ? \"\" : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => remove(item.id),\n              children: i == 0 ? \"\" : \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 55\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addData(),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Record, \"tHZt90+CuQmS/IpCy91qishCruU=\");\n_c = Record;\nexport default Record;\nvar _c;\n$RefreshReg$(_c, \"Record\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Record","_s","input","setInput","id","name","phone","addData","newRow","Math","floor","random","add","inputhandle","e","i","data","target","value","remove","allData","del","filter","val","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/React js/Pr_2/src/Home.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport './home.css'\r\n\r\nconst Record = () => {\r\n\r\n    const [input, setInput] = useState([\r\n        { id: '', name: '', phone: '' }\r\n    ])\r\n\r\n    const addData = () => {\r\n        let newRow = { id: Math.floor(Math.random() * 10000), name: '', phone: '' };\r\n        let add = [...input, newRow];\r\n        setInput(add)\r\n    }\r\n\r\n    const inputhandle = (e, i) => {\r\n        let data = [...input];\r\n        data[i][e.target.name] = e.target.value;\r\n        setInput(data)\r\n    }\r\n\r\n    const remove = (id) => {\r\n        let allData = [...input];\r\n        let del = allData.filter((val) => {\r\n            return val.id != id;\r\n        })\r\n        setInput(del)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container main\">\r\n            <div className=\"row\">\r\n                <h1>Dynamic Form</h1>\r\n                <form>\r\n                    {\r\n                        input.map((item, i) => {\r\n                            return (\r\n                                <div key={i}>\r\n                                    <input type=\"hidden\" value={item.id} />\r\n                                    Name : <input type=\"text\" name=\"name\" value={item.name} onChange={(e) => inputhandle(e, i)} />\r\n                                    Phone : <input type=\"text\" name=\"phone\" value={item.phone} onChange={(e) => inputhandle(e, i)} />\r\n                                    {\r\n                                        i == 0 ? \"\" : <button type=\"button\" onClick={() => remove(item.id)}>\r\n                                            {\r\n                                                i == 0 ? \"\" : \"delete\"\r\n                                            }\r\n                                        </button>\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </form>\r\n\r\n                <button onClick={() => addData()}>Add</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Record;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}