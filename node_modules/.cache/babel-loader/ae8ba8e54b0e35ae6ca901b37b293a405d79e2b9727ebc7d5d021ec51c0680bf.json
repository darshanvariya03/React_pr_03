{"ast":null,"code":"var _jsxFileName = \"C:\\\\React js\\\\Pr_2\\\\src\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoApp = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const handleInputChange = event => {\n    setNewTask(event.target.value);\n  };\n  const addTask = () => {\n    if (newTask.trim() !== '') {\n      setTasks([...tasks, {\n        id: Date.now(),\n        text: newTask,\n        completed: false\n      }]);\n      setNewTask('');\n    }\n  };\n  const toggleTaskCompletion = taskId => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const deleteTask = taskId => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: handleInputChange,\n        placeholder: \"Enter a new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => toggleTaskCompletion(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: task.completed ? 'completed' : '',\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoApp, \"MMRu7H+sKP7rEuK8M8zT6HaT89w=\");\n_c = TodoApp;\nexport default Demo;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoApp","_s","tasks","setTasks","newTask","setNewTask","handleInputChange","event","target","value","addTask","trim","id","Date","now","text","completed","toggleTaskCompletion","taskId","map","task","deleteTask","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","checked","_c","Demo","$RefreshReg$"],"sources":["C:/React js/Pr_2/src/Home.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TodoApp = () => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [newTask, setNewTask] = useState('');\r\n\r\n    const handleInputChange = (event) => {\r\n        setNewTask(event.target.value);\r\n    };\r\n\r\n    const addTask = () => {\r\n        if (newTask.trim() !== '') {\r\n            setTasks([...tasks, { id: Date.now(), text: newTask, completed: false }]);\r\n            setNewTask('');\r\n        }\r\n    };\r\n\r\n    const toggleTaskCompletion = (taskId) => {\r\n        setTasks(tasks.map(task => \r\n            task.id === taskId ? { ...task, completed: !task.completed } : task\r\n        ));\r\n    };\r\n\r\n    const deleteTask = (taskId) => {\r\n        setTasks(tasks.filter(task => task.id !== taskId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"todo-app\">\r\n            <h1>Todo List</h1>\r\n            <div className=\"add-task\">\r\n                <input \r\n                    type=\"text\" \r\n                    value={newTask} \r\n                    onChange={handleInputChange} \r\n                    placeholder=\"Enter a new task\" \r\n                />\r\n                <button onClick={addTask}>Add Task</button>\r\n            </div>\r\n            <ul className=\"task-list\">\r\n                {tasks.map(task => (\r\n                    <li key={task.id}>\r\n                        <input \r\n                            type=\"checkbox\" \r\n                            checked={task.completed} \r\n                            onChange={() => toggleTaskCompletion(task.id)} \r\n                        />\r\n                        <span className={task.completed ? 'completed' : ''}>{task.text}</span>\r\n                        <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Demo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}